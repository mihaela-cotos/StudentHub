Toate rutele disponibile pentru utilizatorii cu rolul SECRETAR.


------- PENTRU routes/secretar/students.routes.js -------

1. POST /api/login/secretar
    body:
     {
       "nume_utilizator": "secretar1",
       "parola": "parola123"
     }

    Raspuns:
    {
      "token": "<JWT_TOKEN>",
      "secretar": {
        "id": 4,
        "nume_utilizator": "secretar1"
      }
    }

2. GET /api/secretar/students
    Răspunde cu o listă de toți studenții din baza de date.

    Headers: Authorization: Bearer <JWT_TOKEN>

    Raspuns:
    [
        {
            "student_id": 2,
            "grupa": "A2",
            "facultate_id": null,
            "utilizator_id": 2,
            "Utilizator": {
                "nume_utilizator": "student_test",
                "email": "student_test@example.com"
            },
            "Facultate": null
        }
    ]

3. GET /api/secretar/students/{id}
    Răspunde cu detalii despre un student specificat prin ID.

    URL Param:
    id: ID-ul studentului

    Raspuns:
    {
        "student_id": 2,
        "grupa": "A2",
        "facultate_id": null,
        "utilizator_id": 2,
        "Utilizator": {
            "nume_utilizator": "student_test",
            "email": "student_test@example.com"
        },
        "Facultate": null
    }


4. POST /api/secretar/students
    Creeaza un student

    Body:
    {
      "nume_utilizator": "newstudent",
      "parola": "parola123",
      "grupa": "A2",
      "facultate_id": 1,
      "email": "new@student.com"
    }

    Raspuns:
    {
      "message": "Student înregistrat cu succes",
      "student": {
        "id": 5,
        "grupa": "A2",
        "nume_utilizator": "newstudent",
        "email": "new@student.com"
      }
    }

5. PUT /api/secretar/students/:id
    Modifica facultatea/grupa unui student

    Body:
    {
      "grupa": "???",
      "facultate_id": ???
    }

    Raspuns:
    {
        "message": "Student actualizat cu succes",
        "student": {
            "student_id": 4,
            "grupa": "???",
            "facultate_id": ???,
            "utilizator_id": 10
        }
    }

6. DELETE /api/secretar/students/:id
    Sterge un student specificat prin ID.

    URL Param:
    id: ID-ul studentului

    Raspuns:
    {
        "message": "Student șters cu succes"
    }

-------- PENTRU routes/secretar/grades.routes.js ---------

1.  POST /api/secretar/grades
    Creeaza (sau modifica) o nota pentru un student

    Body:
    {
      "student_id": 2,
      "curs_id": 1,
      "nota": 9.5
    }

    Raspuns:
    {
      "message": "Notă actualizată cu succes", (sau "Notă adăugată cu succes")
      "nota": {
        "id": 12,
        "student_id": 1,
        "curs_id": 3,
        "valoare": 9.5
      }
    }

2. GET /api/secretar/grades/student/:studentId
    Returneaza toate notele pentru un student

    URL param: student_id

    Raspuns:
    {
      "student_id": 1,
      "note": [
        {
          "curs_id": 3,
          "denumire_curs": "Matematică",
          "valoare": 9.5
        },
        {
          "curs_id": 4,
          "denumire_curs": "Fizică",
          "valoare": 8
        }
      ]
    }

3. GET /api/secretar/grades
    Returneaza TOATE notele din DB (nu stiu daca e necesar, e mai mult de verificare)


    Raspuns:
    [
      {
        "id": 12,
        "valoare": 9.5,
        "Student": {
          "student_id": 1,
          "grupa": "A2"
        },
        "Curs": {
          "curs_id": 3,
          "nume": "Matematică"
        }
      }
    ]

4. GET /api/secretar/grades/:id
    Returneaza o nota specificata prin ID

    URL Param:
    id: ID-ul notei

    Raspuns:
    {
      "id": 12,
      "valoare": 9.5,
      "Student": {
        "student_id": 1,
        "grupa": "A2"
      },
      "Curs": {
        "curs_id": 3,
        "nume": "Matematică"
      }
    }

5. DELETE /api/secretar/grades/:id
    Sterge o nota specificata prin ID

    URL Param:
    id: ID-ul notei

    Raspuns:
    {
      "message": "Notă ștearsă cu succes"
    }


-------  PENTRU routes/secretar/cereri.routes.js ----------

1. GET /api/secretar/cereri
    returneaza toate cererile
    *** se poate de filtrat dupa campul data_emitere din Cerere_adeverinta
        (daca e null => cererea nu e gata, daca e diferit de null => poate fi luata)

    Raspuns de forma:
    [
      {
        "cerere_id": 1,
        "student_id": 5,
        "tip_adeverinta": "Adeverință de student",
        "data_cerere": "2025-05-01T12:00:00.000Z",
        "data_emitere": null,
        "Student": {
          "student_id": 5,
          "grupa": "311B"
        }
      }
    ]

    *** OBS: la noi e lista goala [] pentru ca cand scriu eu asta nu exista cereri

2. GET /api/secretar/cereri/student/:id
    Afișează toate cererile unui student.

    URL param: id student

    Raspuns:
    {
        "message": "Studentul nu are cereri înregistrate"
    }

    sau ceva de genu:
    [
      {
        "cerere_id": 2,
        "student_id": 8,
        "tip_adeverinta": "Adeverință de burse",
        "data_cerere": "2025-05-25T10:30:00.000Z",
        "data_emitere": "2025-05-27T15:00:00.000Z",
        "Student": {
          "grupa": "312A"
        }
      }
    ]


3. PUT /api/secretar/cereri/:id/emitere
    Marchează o cerere ca fiind pregătită (completează data_emitere cu data curentă).

    URL param: id cerere

    Raspuns:
    {
       "message": "Cererea a fost marcată ca emisă",
       "cerere": {
         "cerere_id": 2,
         "data_emitere": "2025-05-28T14:20:00.000Z",
         ...
       }
    }


OPTIONAL: POST /api/secretar/cereri
Daca vrem sa spunem ca si secretarul poate sa ceara de la student ceva (de exemplu cont bancar sau vreun act)

    Body:
    {
      "student_id": 8,
      "tip_adeverinta": "Adeverință pentru viză"
    }

    Raspuns:
    {
      "message": "Cerere înregistrată cu succes",
      "cerere": {
        "cerere_id": 3,
        "student_id": 8,
        "tip_adeverinta": "Adeverință pentru viză",
        "data_cerere": "2025-05-28T10:10:00.000Z"
      }
    }


4. DELETE /api/secretar/cereri/:id

    Șterge o cerere specificată prin ID.

    URL Param:
    id: ID-ul cererii

    Raspuns:
    {
      "message": "Cerere ștearsă cu succes"
    }


